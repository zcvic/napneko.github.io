import{_ as r,c as o,j as e,a as p,G as n,a2 as s,B as d,o as i}from"./chunks/framework.DZuLV8wC.js";const u=JSON.parse('{"title":"NapCatQQ","description":"","frontmatter":{},"headers":[],"relativePath":"guide/NapCatQQ.md","filePath":"guide/NapCatQQ.md","lastUpdated":1735106567000}'),l={name:"guide/NapCatQQ.md"};function Q(c,a,N,h,m,f){const t=d("NolebasePageProperties");return i(),o("div",null,[a[0]||(a[0]=e("h1",{id:"napcatqq",tabindex:"-1"},[p("NapCatQQ "),e("a",{class:"header-anchor",href:"#napcatqq","aria-label":'Permalink to "NapCatQQ"'},"​")],-1)),n(t),a[1]||(a[1]=s('<h2 id="欢迎回家" tabindex="-1">欢迎回家! <a class="header-anchor" href="#欢迎回家" aria-label="Permalink to &quot;欢迎回家!&quot;">​</a></h2><p>NapCatQQ V4 已启用全新风格标识和文档, 欢迎回家！ 这里是 NapCatQQ (aka 猫猫框架) 的使用文档！</p><h2 id="什么是-napcatqq-框架" tabindex="-1">什么是 NapCatQQ 框架? <a class="header-anchor" href="#什么是-napcatqq-框架" aria-label="Permalink to &quot;什么是 NapCatQQ 框架?&quot;">​</a></h2><p>猫猫框架通过魔法的手段获得了 QQ 的发送消息、接收消息等接口。</p><p>为了方便使用，猫猫框架将通过一种名为 <a href="https://11.onebot.dev" target="_blank" rel="noreferrer">OneBot</a> 的约定将你的 HTTP / WebSocket 请求按照规范读取，</p><p>再去调用猫猫框架所获得的QQ发送接口之类的接口。</p>',6))])}const C=r(l,[["render",Q]]);export{u as __pageData,C as default};
