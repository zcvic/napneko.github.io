import{_ as e,c as t,a2 as a,o as n}from"./chunks/framework.DPuwY6B9.js";const i="/assets/use/koishi-install-onebot.png",s="/assets/use/koishi-onebot-go-setting.png",r="/assets/use/koishi-onebot-setting.png",k=JSON.parse('{"title":"接入框架","description":"","frontmatter":{},"headers":[],"relativePath":"use/integration.md","filePath":"use/integration.md","lastUpdated":1729240823000}'),p={name:"use/integration.md"};function c(l,o,d,h,b,g){return n(),t("div",null,o[0]||(o[0]=[a('<h1 id="接入框架" tabindex="-1">接入框架 <a class="header-anchor" href="#接入框架" aria-label="Permalink to &quot;接入框架&quot;">​</a></h1><h2 id="nonebot" tabindex="-1"><a href="https://nonebot.dev/docs/" target="_blank" rel="noreferrer">NoneBot</a> <a class="header-anchor" href="#nonebot" aria-label="Permalink to &quot;[NoneBot](https://nonebot.dev/docs/)&quot;">​</a></h2><ol><li><p>配置 NoneBot</p><p>这里假设你已经安装了 OneBot 适配器</p><p>默认情况下，NoneBot 是启用了反向 ws 的，如果出现 403，可能是默认配置问题，需要配置 <code>token</code> 才能正常连接。</p><p>具体方法为：修改 NoneBot 配置文件 <code>.env</code>，添加 <code>ONEBOT_ACCESS_TOKEN=你在 NapCat 中配置的 token</code>。</p><p>然后，启动 NoneBot，可以看到 NoneBot 输出的端口号，如 <code>8080</code>。</p></li><li><p>配置 NapCat</p><p>在 NapCat 配置添加反向 ws 地址，地址为 <code>ws://127.0.0.1:8080/onebot/v11/ws</code>, 这里的 <code>8080</code> 是 NoneBot 输出的端口号，<code>/onebot/v11/ws</code> 是 NoneBot onebot 适配器默认的路径</p></li></ol><h2 id="koishi" tabindex="-1"><a href="https://koishi.chat" target="_blank" rel="noreferrer">Koishi</a> <a class="header-anchor" href="#koishi" aria-label="Permalink to &quot;[Koishi](https://koishi.chat)&quot;">​</a></h2><ol><li><p>在 Koishi 插件市场搜索 <code>onebot</code> 并安装 <code>adapter-onebot</code>，如下图：</p><p><img src="'+i+'" alt="koishi-install-onebot"></p></li><li><p>安装完之后，点击修改→配置</p><p><img src="'+s+'" alt="koishi-onebot-go-setting"></p></li><li><p>配置 OneBot</p><p>这里以 WS 反向连接为例：</p><ul><li><code>selfId</code> 为你的机器人的 QQ 号</li><li><code>token</code> 需和 NapCat 配置的 <code>token</code> 一致，当然，如果没有配置 token，则留空。</li><li><code>protocol</code> 选择 ws-reverse</li></ul><p>其他配置保持默认即可，点击保存，然后启用插件。</p><p><img src="'+r+'" alt="koishi-onebot-setting"></p><p>配置完成后，在 NapCat 的配置中添加 WS 反向地址。Koishi OneBot 的 ws 反向地址为 <code>ws://127.0.0.1:5140/onebot</code>。添加完成后，点击保存即可。</p></li></ol><h2 id="olivos" tabindex="-1">OlivOS <a class="header-anchor" href="#olivos" aria-label="Permalink to &quot;OlivOS&quot;">​</a></h2><p>支持正向和反向ws以及http详见 <a href="https://doc.olivos.wiki/" target="_blank" rel="noreferrer">文档</a></p><h2 id="onebotv11-rs" tabindex="-1"><a href="https://github.com/canxin121/onebotv11_rs" target="_blank" rel="noreferrer">onebotv11_rs</a> <a class="header-anchor" href="#onebotv11-rs" aria-label="Permalink to &quot;[onebotv11_rs](https://github.com/canxin121/onebotv11_rs)&quot;">​</a></h2><p>支持正向和反向ws以及http</p><h2 id="node-napcat-ts" tabindex="-1"><a href="https://github.com/huankong233/node-napcat-ts" target="_blank" rel="noreferrer">node-napcat-ts</a> <a class="header-anchor" href="#node-napcat-ts" aria-label="Permalink to &quot;[node-napcat-ts](https://github.com/huankong233/node-napcat-ts)&quot;">​</a></h2><ol><li><p>配置 NapCat</p><p>在 NapCat 配置启用正向 ws</p></li><li><p>配置 node-napcat-ts</p><p><a href="https://node-napcat-ts.huankong.top/guide/getting-started" target="_blank" rel="noreferrer">详见 node-napcat-ts 文档</a></p><p>如果出现连接失败，可能是配置问题，需要配置 token 才能正常连接。</p></li></ol><h2 id="minato" tabindex="-1"><a href="https://github.com/huankong233/Minato" target="_blank" rel="noreferrer">Minato</a> <a class="header-anchor" href="#minato" aria-label="Permalink to &quot;[Minato](https://github.com/huankong233/Minato)&quot;">​</a></h2><p>基于 <code>node-napcat-ts</code> 实现的，所以需要的配置类似</p><p>只需要配置几个插件 <code>/src/plugins</code> 即可运行, 配置方法: 复制 <code>config.default.ts</code> 文件到 <code>config.ts</code> 并配置其中配置项即可运行</p>',14)]))}const f=e(p,[["render",c]]);export{k as __pageData,f as default};
