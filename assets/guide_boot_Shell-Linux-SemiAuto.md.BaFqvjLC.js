import{_ as s,c as i,a2 as n,o as t}from"./chunks/framework.DPuwY6B9.js";const d=JSON.parse('{"title":"BootWay03 (半自动) 教程","description":"","frontmatter":{},"headers":[],"relativePath":"guide/boot/Shell-Linux-SemiAuto.md","filePath":"guide/boot/Shell-Linux-SemiAuto.md","lastUpdated":1729563184000}'),p={name:"guide/boot/Shell-Linux-SemiAuto.md"};function e(l,a,h,o,r,k){return t(),i("div",null,a[0]||(a[0]=[n(`<h1 id="bootway03-半自动-教程" tabindex="-1">BootWay03 (半自动) 教程 <a class="header-anchor" href="#bootway03-半自动-教程" aria-label="Permalink to &quot;BootWay03 (半自动) 教程&quot;">​</a></h1><h2 id="安装教程" tabindex="-1">安装教程 <a class="header-anchor" href="#安装教程" aria-label="Permalink to &quot;安装教程&quot;">​</a></h2><h3 id="_1-安装qq" tabindex="-1">1.安装QQ <a class="header-anchor" href="#_1-安装qq" aria-label="Permalink to &quot;1.安装QQ&quot;">​</a></h3><p>你需要安装28060+版本的 QQ</p><h3 id="_2-挂载启动" tabindex="-1">2.挂载启动 <a class="header-anchor" href="#_2-挂载启动" aria-label="Permalink to &quot;2.挂载启动&quot;">​</a></h3><p>执行命令</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;const fs = require(&quot;fs&quot;);</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">const path = require(&quot;path&quot;);</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">const CurrentPath = path.dirname(__filename);</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">const hasNapcatParam = process.argv.includes(&quot;--no-sandbox&quot;);</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">if (hasNapcatParam) {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    (async () =&gt; {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        await import(&quot;file://&quot; + path.join(CurrentPath, &quot;./napcat/napcat.mjs&quot;));</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        // await import(&quot;file://&quot; + &quot;/path/to/napcat/napcat.mjs&quot;);</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        // 需要修改napcat的用户，在&quot;/path/to/napcat&quot;段写自己的napcat文件夹位置，并注释path.join所在行</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    })();</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">} else {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    require(&quot;./application/app_launcher/index.js&quot;);</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    setTimeout(() =&gt; {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        global.launcher.installPathPkgJson.main = &quot;./application/app_launcher/index.js&quot;;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    }, 0);</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /opt/QQ/resources/app/loadNapCat.js</span></span></code></pre></div><p>如果你使用 LiteloaderQQNT ，那么执行：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;const fs = require(&quot;fs&quot;);</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">const path = require(&quot;path&quot;);</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">const CurrentPath = path.dirname(__filename);</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">const hasNapcatParam = process.argv.includes(&quot;--no-sandbox&quot;);</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">if (hasNapcatParam) {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    (async () =&gt; {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        await import(&quot;file://&quot; + path.join(CurrentPath, &quot;./napcat/napcat.mjs&quot;));</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        // await import(&quot;file://&quot; + &quot;/path/to/napcat/napcat.mjs&quot;);</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        // 需要修改napcat的用户，在&quot;/path/to/napcat&quot;段写自己的napcat文件夹位置，并注释path.join所在行</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    })();</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">} else {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    require(String.raw\`/opt/LiteLoaderQQNT\`);  //引号中写入你的liteloaderqqnt路径</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /opt/QQ/resources/app/loadNapCat.js</span></span></code></pre></div><h3 id="_3-安装napcat" tabindex="-1">3.安装napcat <a class="header-anchor" href="#_3-安装napcat" aria-label="Permalink to &quot;3.安装napcat&quot;">​</a></h3><p>安装 napcat.shell 到 <code>/opt/QQ/resources/app/napcat</code> 确保 <code>/opt/QQ/resources/app/napcat/napcat.js</code> 存在</p><h3 id="_4-修补-package-json" tabindex="-1">4.修补 package.json <a class="header-anchor" href="#_4-修补-package-json" aria-label="Permalink to &quot;4.修补 package.json&quot;">​</a></h3><p>修改 <code>/opt/QQ/resources/app/package.json</code> 的main属性从<code>./application/app_launcher/index.js</code> 改为<code>./loadNapCat.js</code></p><p>这步也可以使用下面替代</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +777</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /opt/QQ</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sed</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;s/&quot;main&quot;: &quot;.\\/application\\/app_launcher\\/index.js&quot;/&quot;main&quot;: &quot;.\\/loadNapCat.js&quot;/&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /opt/QQ/resources/app/package.json</span></span></code></pre></div><h3 id="_5-启动" tabindex="-1">5.启动 <a class="header-anchor" href="#_5-启动" aria-label="Permalink to &quot;5.启动&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">xvfb-run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> qq</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --no-sandbox</span></span></code></pre></div>`,17)]))}const F=s(p,[["render",e]]);export{d as __pageData,F as default};
