import{_ as i,c as a,a2 as e,o as n}from"./chunks/framework.DZuLV8wC.js";const c=JSON.parse('{"title":"二次开发 - 基于NapCat定制化开发方案","description":"","frontmatter":{},"headers":[],"relativePath":"develop/plugin.md","filePath":"develop/plugin.md","lastUpdated":1733970438000}'),p={name:"develop/plugin.md"};function t(l,s,h,k,r,d){return n(),a("div",null,s[0]||(s[0]=[e(`<h1 id="二次开发-基于napcat定制化开发方案" tabindex="-1">二次开发 - 基于NapCat定制化开发方案 <a class="header-anchor" href="#二次开发-基于napcat定制化开发方案" aria-label="Permalink to &quot;二次开发 - 基于NapCat定制化开发方案&quot;">​</a></h1><h2 id="环境配置" tabindex="-1">环境配置 <a class="header-anchor" href="#环境配置" aria-label="Permalink to &quot;环境配置&quot;">​</a></h2><ol><li>拉取NapCat仓库后 在命令行执行 <code>npm run dev:depend</code> 按照NapCat本体和WebUi依赖</li><li>初次构建NapCat 运行 <code>npm run build:shell</code> 或者 <code>npm run build:framework</code> 此次构建将会初始化WebUi打包文件和NapCat</li><li>启动NetWork/Plugin适配器 <code>/src/onebot/index.ts NapCatOneBot11Adapter-&gt;InitOneBot方法内 解除相关注释代码</code> 即可注册Plugin适配器</li><li>打开 <code>/src/onebot/network/plugin.ts</code> Plugin适配器代码 你可以修改这几项配置</li></ol><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">messagePostFormat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;array&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// array为消息段 string为CQ码</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">reportSelfMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 上报自身消息</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">enable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 启用适配器</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 调试模式</span></span></code></pre></div><ol start="5"><li>再次构建可选择 <code>npm run dev:shell</code> 或者 <code>npm run dev:framework</code> 跳过重复构建WebUi过程</li></ol><h2 id="开始开发" tabindex="-1">开始开发 <a class="header-anchor" href="#开始开发" aria-label="Permalink to &quot;开始开发&quot;">​</a></h2><p>恭喜你完成了基础配置 现在打开 <code>/src/plugin/index.ts plugin_onmessage方法</code> 在此方法监听消息并处理</p><p>当你需要调用NTQQ Api 可以通过很多方法调用下面为例子</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">core.apis.GroupApi.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">banMember</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 调用NapCat Core Api 用于禁言成员成员</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> SendGroupMsg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(obCore, core)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">handle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ group_id: message.group_id, message: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;正在设置头衔...&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, auto_escape: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }, adapter);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 调用NapCat OneBot Action用于发送消息接口 adapter固定(此值固定为plugin 用于标记适配器)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">obCore.apis.MsgApi.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createSendElements</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 调用NapCat OneBot Api用于创建消息</span></span></code></pre></div><p>前两种比较常用 <code>obCore.apis</code>主要用于OB-&gt;NT消息内容转换实际内容不多</p>`,10)]))}const g=i(p,[["render",t]]);export{c as __pageData,g as default};
