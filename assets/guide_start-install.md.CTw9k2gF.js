import{_ as e,c as l,a2 as r,o as t}from"./chunks/framework.DPuwY6B9.js";const p=JSON.parse('{"title":"开始安装","description":"","frontmatter":{},"headers":[],"relativePath":"guide/start-install.md","filePath":"guide/start-install.md","lastUpdated":1729648571000}'),o={name:"guide/start-install.md"};function i(h,a,s,d,n,c){return t(),l("div",null,a[0]||(a[0]=[r('<h1 id="开始安装" tabindex="-1">开始安装 <a class="header-anchor" href="#开始安装" aria-label="Permalink to &quot;开始安装&quot;">​</a></h1><p>前往 <a href="https://github.com/NapNeko/NapCatQQ/releases" target="_blank" rel="noreferrer">NapCatQQ 的 release 页面</a>，各位可以看到有两种压缩包， 文件名后缀分别为 <code>Shell</code> 和 <code>Framework</code>，应当如何选择呢？</p><h2 id="了解-release文件" tabindex="-1">了解 Release文件 <a class="header-anchor" href="#了解-release文件" aria-label="Permalink to &quot;了解 Release文件&quot;">​</a></h2><p>使用前请务必了解</p><p><a href="./boot/release">点我了解</a></p><h2 id="shell-版本" tabindex="-1">Shell 版本 <a class="header-anchor" href="#shell-版本" aria-label="Permalink to &quot;Shell 版本&quot;">​</a></h2><p>此方法为 <code>无头启动</code></p><h3 id="优点" tabindex="-1">优点 <a class="header-anchor" href="#优点" aria-label="Permalink to &quot;优点&quot;">​</a></h3><ul><li>无需图形化界面</li><li>节省内存</li></ul><h3 id="教程" tabindex="-1">教程 <a class="header-anchor" href="#教程" aria-label="Permalink to &quot;教程&quot;">​</a></h3><ul><li>适用教程 <a href="./boot/Shell">方法2 - 使用命令行启动</a> &lt;- 推荐</li><li>适用教程 <a href="./boot/Shell-Linux-SemiAuto">方法2 - Arch手动配置</a> &lt;-Arch</li></ul><h2 id="framework-版本" tabindex="-1">Framework 版本 <a class="header-anchor" href="#framework-版本" aria-label="Permalink to &quot;Framework 版本&quot;">​</a></h2><p>此方法为 <code>有头启动</code></p><h3 id="优点-1" tabindex="-1">优点 <a class="header-anchor" href="#优点-1" aria-label="Permalink to &quot;优点&quot;">​</a></h3><ul><li>&quot;人机合一&quot;</li></ul><h3 id="教程-1" tabindex="-1">教程 <a class="header-anchor" href="#教程-1" aria-label="Permalink to &quot;教程&quot;">​</a></h3><ul><li>适用教程 <a href="./boot/Framework">方法1 - 作为 LiteLoader 插件启动</a> &lt;- 推荐</li><li>适用教程 <code>方法3 - 原生使用 NapCatQQ 启动</code> &lt;- 由于启动方式变更,暂不提供教程</li></ul>',17)]))}const m=e(o,[["render",i]]);export{p as __pageData,m as default};
