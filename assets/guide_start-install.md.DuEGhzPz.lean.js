import{_ as p,c as o,j as a,a as e,b as n,w as r,a3 as s,a2 as d,B as h,o as l,G as c}from"./chunks/framework.DZuLV8wC.js";const A=JSON.parse('{"title":"NapCat","description":"","frontmatter":{},"headers":[],"relativePath":"guide/start-install.md","filePath":"guide/start-install.md","lastUpdated":1732439444000}'),N={name:"guide/start-install.md"};function g(m,t,C,B,E,u){const i=h("Mermaid");return l(),o("div",null,[t[1]||(t[1]=a("h1",{id:"napcat",tabindex:"-1"},[e("NapCat "),a("a",{class:"header-anchor",href:"#napcat","aria-label":'Permalink to "NapCat"'},"​")],-1)),t[2]||(t[2]=a("p",null,"欢迎来到 NapCat Robot 的世界！接下来我将为你讲解一些入门知识。",-1)),t[3]||(t[3]=a("p",null,"此文档又名：如何驾驭 NapCat 快速踏入一阶魔法师。",-1)),t[4]||(t[4]=a("h2",{id:"napcat-施展了什么魔法",tabindex:"-1"},[e("NapCat 施展了什么魔法 "),a("a",{class:"header-anchor",href:"#napcat-施展了什么魔法","aria-label":'Permalink to "NapCat 施展了什么魔法"'},"​")],-1)),(l(),n(s,null,{default:r(()=>[c(i,{id:"mermaid-12",class:"mermaid my-class",graph:"graph%20TD%0A%20%20%20%20NTQQ%E5%AE%A2%E6%88%B7%E7%AB%AF%20--%20JavaScript%E4%BA%A4%E4%BA%92%20%3C--%3E%20NapCat%0A%20%20%20%20NapCat%20--%20WS%2FHTTP%20%3C--%3E%20%E6%8F%92%E4%BB%B6%E6%A1%86%E6%9E%B6%0A%20%20%20%20NapCat%20--%20WS%2FHTTP%20%3C--%3E%20%E7%8B%AC%E7%AB%8B%E6%8F%92%E4%BB%B6%0A%20%20%20%20%E6%8F%92%E4%BB%B6%E6%A1%86%E6%9E%B6%20%3C--%3E%20%E6%8F%92%E4%BB%B61%0A%20%20%20%20%E6%8F%92%E4%BB%B6%E6%A1%86%E6%9E%B6%20%3C--%3E%20%E6%8F%92%E4%BB%B62%0A"})]),fallback:r(()=>t[0]||(t[0]=[e(" Loading... ")])),_:1})),t[5]||(t[5]=d('<details class="details custom-block"><summary>小小的故事...</summary><p>在一个遥远的、充满奇幻与科技交织的世界——<strong>NapCat Robot</strong>，有一种神秘且强大的力量，叫做 <strong>NTQQ</strong>。这股力量，简直就像是一颗随时可能爆炸的定时炸弹，能改变一切，却又异常难以控制。很多英雄、巫师、冒险者们曾试图驾驭它，结果都失败得一塌糊涂，甚至连他们的名字都被历史遗忘了，仿佛从未存在过。</p><p>然而，在这个充满混乱的世界里，有一只小猫娘，名字叫做 <strong>NapCat</strong>，她不仅是这个故事的主角，而且简直是这个世界最萌最可爱的“灾难制造机”。NapCat外表乖巧，萌萌哒，软乎乎的，简直像个大大的毛球，走路一摇一摆的，超乎想象的笨拙。她曾经被遗弃在一个荒凉的角落里，孤零零地生活着。但某天，她突然发现了一个超级神奇的东西——<strong>JavaScript</strong>！</p><p>“诶？这是什么？看起来像是能吃的样子...可是为什么一点也不好吃呢？”</p><p>于是，NapCat就开始了对这门语言的探索——虽然她并不完全理解它，但她凭着直觉和那种天生的好奇心，成功破解了 JavaScript 的奥秘，并意外地与传说中的 <strong>NTQQ</strong> 产生了连接。</p><p>虽然看起来她像是无害的傻萌猫娘，但NapCat的这项技能竟然能在没有任何计划的情况下，操控 NTQQ 的某些功能，甚至能轻松改变现实的规则！但问题是……她的每次操作，基本上都是胡乱点击、乱敲键盘、然后出奇不意地发生了不想要的结果。</p><p>“嗯？我是不是把天空变得五颜六色了？咦？月亮不见了？咕噜咕噜……好像做错了什么事呢。”</p><p>于是，一切开始变得混乱不堪。天空瞬间变成了彩虹色，时间突然在某些地方停滞，甚至连月亮都神秘消失了！整个世界都被这只小猫娘的“无心之举”搞得一团糟，灾难的阴影笼罩了整个世界。</p><p>就在大家都以为一切都完了，世界即将崩塌的时候，出现了一个强大的英雄。他不是什么骑着白马，手持宝剑的传统英雄，而是一个比任何人都冷静的智者。他决定采取一种不同的方式来解决这个问题：<strong>OneBot规范</strong>。</p><p>“一切都得按照规范来！否则她会再把世界变成一锅粥！”英雄心想。</p><p>这个英雄明白，NapCat的能力太强大，控制不住的话，真的会把世界毁掉。因此，这位应用采用前辈们广泛使用的OneBot规范，规定 NapCat 任何操作都要写道 <strong>WS/HTTP</strong> 这种纸张上，每次使用 NTQQ 的力量时，都要在“纸上”写下相应的指令，才能让 NTQQ按照预设的方式执行任务。而且每次任务完成后，数据也会通过同样的“纸面”反馈回来，确保一切都在可控范围内。</p><p>“啊？这个纸好像好难理解……但是，哦，原来是这么回事呀！”</p><p>于是，NapCat开始在这套严格的规范下与 NTQQ 建立了微妙的关系。她不再是那个随便敲敲代码就让天空变色的笨蛋，而是通过认真的输入和执行指令，逐渐恢复了世界的秩序。</p><p>可虽然一切变得井然有序，NapCat依旧是那个呆萌、迷糊的猫娘。她依然在“纸”上写着自己不太明白的指令，每次完成任务后，她都会露出一副“我是不是做对了？”的迷茫表情，仿佛在问：“哎？我这次没搞砸吧？”</p><p>尽管如此，大家也逐渐接受了她的笨拙，因为她那种天真可爱的样子实在让人忍不住心软。最重要的是，世界终于恢复了平静，大家都知道，这只猫娘虽然有时候会闹出点小乱子，但她那份纯真与努力，才是让这个世界重新恢复平衡的力量。</p><p>从那时起，NapCat与NTQQ之间的微妙平衡保持着，而你也可以来这个世界，看看这只可爱笨蛋猫娘是怎么在搞笑与危机四伏中，带着一颗认真又迷糊的心，守护这个充满魔力与冒险的世界的！✨</p></details><p>由此可以看出 使用NapCat必须保证NTQQ的客户端这一基础的存在, 于是使用流程大概为</p><ol start="0"><li><p>安装<strong>对应版本</strong>NTQQ (特殊情况不需要安装或安装器代为安装)</p></li><li><p>下载你需要的NapCat版本</p></li><li><p>遵照其详细教程启动NapCat本体</p></li><li><p>进入WebUi 启动你需要HTTP/WS 客户端与服务端</p></li><li><p>配置框架或者独立插件连接NapCat</p></li></ol><h2 id="release里面问题有些什么呢" tabindex="-1">Release里面问题有些什么呢 <a class="header-anchor" href="#release里面问题有些什么呢" aria-label="Permalink to &quot;Release里面问题有些什么呢&quot;">​</a></h2><table tabindex="0"><thead><tr><th>文件名称</th><th style="text-align:center;">注意事项</th><th style="text-align:right;">适用平台</th></tr></thead><tbody><tr><td>NapCat.Framework.Windows.Once.zip</td><td style="text-align:center;">一键包Framework包(不包含QQ)</td><td style="text-align:right;">Windows.AMD64</td></tr><tr><td>NapCat.Framework.zip</td><td style="text-align:center;">Framework本体</td><td style="text-align:right;">AnyPlat.AnyArch</td></tr><tr><td>NapCat.Shell.zip</td><td style="text-align:center;">Shell本体+启动器(不包含QQ)</td><td style="text-align:right;">AnyPlat.AnyArch</td></tr><tr><td>Win无头链接</td><td style="text-align:center;">Shell本体+启动器(包含QQ)</td><td style="text-align:right;">Windows.AMD64</td></tr><tr><td>Win有头链接</td><td style="text-align:center;">Framework本体+启动器(包含QQ)</td><td style="text-align:right;">Windows.AMD64</td></tr></tbody></table><h2 id="思考思考" tabindex="-1">思考思考 <a class="header-anchor" href="#思考思考" aria-label="Permalink to &quot;思考思考&quot;">​</a></h2><p>NapCat有着众多启动方式 这些启动方式 伴随各种特性</p><p>Shell 版本具有低内存 服务器部署简单的方案</p><p>Framework 版本是具有可以 人机一体 方便窥屏的方案</p><h3 id="shell-启动-安装方式" tabindex="-1">Shell 启动/安装方式 <a class="header-anchor" href="#shell-启动-安装方式" aria-label="Permalink to &quot;Shell 启动/安装方式&quot;">​</a></h3><ul><li>适用教程 <a href="./boot/Framework">方法1 - 作为 LiteLoader 插件启动</a> &lt;- 推荐</li><li>适用教程 <code>方法3 - 原生使用 NapCatQQ 启动</code> &lt;- 由于启动方式变更,暂不提供教程</li></ul><h3 id="framework-启动-安装方式" tabindex="-1">Framework 启动/安装方式 <a class="header-anchor" href="#framework-启动-安装方式" aria-label="Permalink to &quot;Framework 启动/安装方式&quot;">​</a></h3><ul><li>适用教程 <a href="./boot/Shell">方法2 - 使用命令行启动</a> &lt;- 推荐</li><li>适用教程 <a href="./boot/Shell-Linux-SemiAuto">方法2 - Arch手动配置</a> &lt;-Arch</li></ul><h2 id="安装完成-铛铛" tabindex="-1">安装完成！铛铛 <a class="header-anchor" href="#安装完成-铛铛" aria-label="Permalink to &quot;安装完成！铛铛&quot;">​</a></h2><p>安装后就可以执行 <code>3. 进入WebUi 启动你需要HTTP/WS 客户端与服务端</code></p><p><a href="./../config/basic">前往WebUi配置教程</a></p>',16))])}const Q=p(N,[["render",g]]);export{A as __pageData,Q as default};
